// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAPIInterviewIDHandlerFunc turns a function with the right signature into a get API interview ID handler
type GetAPIInterviewIDHandlerFunc func(GetAPIInterviewIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAPIInterviewIDHandlerFunc) Handle(params GetAPIInterviewIDParams) middleware.Responder {
	return fn(params)
}

// GetAPIInterviewIDHandler interface for that can handle valid get API interview ID params
type GetAPIInterviewIDHandler interface {
	Handle(GetAPIInterviewIDParams) middleware.Responder
}

// NewGetAPIInterviewID creates a new http.Handler for the get API interview ID operation
func NewGetAPIInterviewID(ctx *middleware.Context, handler GetAPIInterviewIDHandler) *GetAPIInterviewID {
	return &GetAPIInterviewID{Context: ctx, Handler: handler}
}

/*GetAPIInterviewID swagger:route GET /api/interview/{id} getApiInterviewId

Returns whether the id is valid.

*/
type GetAPIInterviewID struct {
	Context *middleware.Context
	Handler GetAPIInterviewIDHandler
}

func (o *GetAPIInterviewID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAPIInterviewIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
